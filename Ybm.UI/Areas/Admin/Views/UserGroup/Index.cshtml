@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

@section Scripts
{
    <script src="~/app/areas/Admin/UserGroup/UserGroupIndexController.js"></script>
}
@using Kendo.Mvc.UI;
@using Cms.UI;

<div ng-controller="UserGroupIndexController">
    <div class="panel panel-primary" data-widget='{"draggable": "false"}'>
        <div class="panel-heading">
            <h2> فیلتر </h2>
            <div class="panel-ctrls" data-actions-container="" data-action-collapse='{"target": ".panel-body"}'></div>
        </div>
        <div class="panel-body" style="display: none;">
            <div class="scroll-content">
                @Html.FilterFor((List<Ybm.Framework.CustomFilterDescriptor>)ViewBag.filterControlsModel, (int?)ViewBag.User_Id)
            </div>
        </div>
    </div>



    <div class="panel panel-primary" data-widget='{"draggable": "false"}'>
        <div class="panel-heading">
            <h2>User Group Index</h2>
            <div class="panel-ctrls" data-actions-container="" data-action-collapse='{"target": ".panel-body"}'></div>
        </div>

        <div class="panel-body main">
            <div dir="rtl">
                @(Html.Kendo().Grid<Ybm.UI.Areas.Admin.Requirements.ViewModels.ErrorLogViewModel>()
                      .Name("UserGroupGrid")
                      .Columns(columns =>
                      {
                          columns.Bound(p => p.Id);
                          columns.Bound(p => p.Message);
                          columns.Command(command =>
                          {
                              // command.Custom("ویرایش").Click("Update");
                              // command.Custom("حذف").Click("Delete");
                          });

                      })
                      .ToolBar(toolbar =>
                      {
                          //   toolbar.Custom().Text(" جدید ").HtmlAttributes(new { id = "CreateNew", onclick = "CreateNew()", Href = "#" });
                      })

                      .Pageable()
        .Scrollable(q => q.Enabled(false))
    .DataSource(dataSource => dataSource
        .Ajax()
         .Model(model =>
         {
             model.Id(p => p.Id);

         })
        .Read(read => read.Action("Read", "UserGroup", "Admin"))
    )
                )
            </div>
        </div>
    </div>




</div>